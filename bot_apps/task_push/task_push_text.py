from databases.database import db
from bot_apps.wordbank import task_completion


# –ë–∏–ª–¥–µ—Ä —Ç–µ–∫—Å—Ç–∞ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
def _comment_note_text_builder(info):
    if not info:
        return False
    note_text = '\n<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω: </b>\n'
    # –ï—Å–ª–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if info['words_count'] or info['tags_count'] or info['words_tags']:
        if info['words_count']:
            note_text += f"- –°–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ {info['words_count']} —Å–ª–æ–≤\n"
        elif info['tags_count']:
            note_text += f"- –°–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ {info['tags_count']} —Ç–µ–≥–æ–≤\n"
        else:
            note_text += f"- –°–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Å–ª–æ–≤–∞ –∏ —Ç—ç–≥–∏ {info['words_tags']}\n"
    # –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
    if info['english']:
        note_text += '- –ë—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ' + '\n'
    # –ï—Å–ª–∏ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –±—ã–ª–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–æ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ
    if info['note']:
        note_text += '<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é: </b>' + info['note'] + '\n'
    return note_text


# –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ c –∑–∞–¥–∞–Ω–∏—è–º–∏
def _get_sorted_list(task_info, link_action):
    action_order = {'subscriptions': 1, 'likes': 2, 'retweets': 3, 'comments': 4}
    sorted_action = sorted(task_info['type_task'], key=lambda x: action_order.get(x))
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏
    action_dict = {'subscriptions': 'üéØ–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å', 'likes': 'üéØ–õ–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç', 'retweets': 'üéØ–†–µ—Ç–≤–∏—Ç –ø–æ—Å—Ç–∞', 'comments': 'üéØ–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å—Ç–∞'}
    links_dict = {'subscriptions': 'https://twitter.com/intent/follow?screen_name={0}',
                  'likes': 'https://twitter.com/intent/like?tweet_id={0}',
                  'retweets': 'https://twitter.com/intent/retweet?tweet_id={0}',
                  'comments': 'https://twitter.com/intent/tweet?in_reply_to={0}'}
    main_text = ''.join([f'<a href="{links_dict[i].format(link_action["profile_name"] if i == "subscriptions" else link_action["post_id"])}">{action_dict[i]}</a>\n' for i in sorted_action])
    main_text += _comment_note_text_builder(task_info['comment_parameter']) if 'comment_parameter' in task_info and task_info['comment_parameter'] else ''
    return main_text


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–∏–ª–¥–∏–Ω–≥–∞ —Ç–∏–ø–∞ –∑–∞–¥–∞–Ω–∏—è –∏ –µ–≥–æ –Ω–æ–º–µ—Ä–∞ (1. –ª–∞–π–∫, 2. —Ä–µ—Ç–≤–∏—Ç –∏ —Ç.–¥.)
async def _task_list_builder(tasks: list) -> str:
    action_order = {'subscriptions': 1, 'likes': 2, 'retweets': 3, 'comments': 4}
    sorted_action = sorted(tasks, key=lambda x: action_order.get(x))
    action_dict = {'subscriptions': '–ü–æ–¥–ø–∏—Å–∫–∞', 'likes': '–õ–∞–π–∫', 'retweets': '–†–µ—Ç–≤–∏—Ç', 'comments': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'}
    return ''.join(['<b>' + str(i + 1) + '</b>' + '. ' + action_dict[action] + '\n' for i, action in enumerate(sorted_action)])


# –ë–∏–ª–¥–µ—Ä —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ä–æ–±–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å
async def full_text_task_builder(tasks_msg_id):
    task_info = await db.open_task(int(tasks_msg_id))
    if not task_info:
        return '–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
    text = '‚ú®<b>–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ‚ú®</b>\n'
    text += f'<b>–ù–∞–≥—Ä–∞–¥–∞: {int(task_info["price"]) if task_info["price"].is_integer() else round(task_info["price"], 2)} $STB</b>\n\n'

    text += '<b>–î–µ–π—Å—Ç–≤–∏—è:</b>\n'
    text += await _task_list_builder(task_info['type_task'])
    # –ï—Å–ª–∏ –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    text += _comment_note_text_builder(task_info['comment_parameter']) if 'comment_parameter' in task_info and task_info['comment_parameter'] else ''

    executions = await db.get_task_actual_limit(tasks_msg_id)
    text += f"\n<b>–ó–∞–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Å <code>{executions}</code> {'–∞–∫–∫–∞—É–Ω—Ç–∞' if executions == 1 else '–∞–∫–∫–∞—É–Ω—Ç–æ–≤'}</b>\n"

    text += '\n<i>–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç—ã –Ω–∞–∂–º—ë—à—å –∫–Ω–æ–ø–∫—É "</i>üë®‚Äçü¶Ω<i>–ù–∞—á–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ", —É —Ç–µ–±—è –±—É–¥–µ—Ç 10 –º–∏–Ω—É—Ç –Ω–∞ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ. –£–¥–∞—á–∏</i>üßö‚Äç‚ôÇÔ∏è'

    # –¢–µ–∫—Å—Ç –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–∞—Å–∫ –∏–ª–∏ —É–∂–µ –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é
    result = await db.get_quantity_completed(int(tasks_msg_id))
    if result:
        text += f'\n\n<b>–£–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å: <code>{result}</code></b>'

    return text


# –ë–∏–ª–¥–µ—Ä —Å–∞–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞–Ω–∏—è
# –ï—Å–ª–∏ –±—É–¥–µ—à—å —á—Ç–æ-—Ç–æ —Ä–µ–¥–∞—á–∏—Ç—å –∑–¥–µ—Å—å, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∏–∂–µ –Ω–∞–¥–æ –±—É–¥–µ—Ç —Ç–æ–∂–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å
async def context_task_builder(tasks_msg_id: int | str, account: str, not_complete=None) -> str:
    task_info = await db.open_task(int(tasks_msg_id))
    link_action = await db.get_link_action(tasks_msg_id)
    text = f"–ê –≤–æ—Ç –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µüßû\n\n<b>–ß—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?</b> ({len(task_info['type_task'])} –¥–µ–π—Å—Ç–≤–∏—è):\n\n"
    text += _get_sorted_list(task_info, link_action)
    text += f'\n<b>–ê–∫–∫–∞—É–Ω—Ç,</b> —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ: <a href="https://twitter.com/{account[1:]}">{account}</a>\n'

    if not not_complete:
        text += '\n–û–≥–æ, —Ç—ã –≤—Å—ë —É–∂–µ —Å–¥–µ–ª–∞–ª? –¢–æ–≥–¥–∞ –∂–º–∏ <b>"–ü–†–û–í–ï–†–ò–¢–¨ –ó–ê–î–ê–ù–ò–ï"</b>üëá'
    else:
        dop_dict = {'subscriptions': '–Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å', 'likes': '–Ω–µ –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç', 'retweets': '–Ω–µ —Ä–µ—Ç–≤–∏—Ç–Ω—É–ª –ø–æ—Å—Ç'}
        # –ï—Å–ª–∏ –±—ã–ª –∑–∞–¥–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–∏–ª–¥–µ—Ä–∞, —Ç.–∫. —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–µ–ª–∞–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        if not_complete in ('comment', 'comments'):  # –≤ 1 —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è comments, –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö comment, –ø–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–∏–ª 2 —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ—Ä—Ç–µ–∂
            return text
        text += f'\n–ö–∞–∂–µ—Ç—Å—è, —Ç—ã <b>{dop_dict[not_complete]}</b>ü•∫\n–ó–∞–∫–æ–Ω—á–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∏ –∂–º–∏ <b>"–ü–†–û–í–ï–†–ò–¢–¨ –ó–ê–î–ê–ù–ò–ï"</b>üëá'
    return text


# –ë–∏–ª–¥–∏—Ç —Ç–µ–∫—Å—Ç, –¥–ª—è –≤–æ—Ä–∫–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∞–ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
async def new_account_from_task_builder(tasks_msg_id, account):
    text = '<b>–ù–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —É —Ç–µ–±—è –≤—Å—ë —Ç–∞–∫–∂–µ 10 –º–∏–Ω—É—Ç, –∫—Å—Ç–∞—Ç–∏, –æ–Ω–∏ —É–∂–µ –Ω–∞—á–∞–ª–∏—Å—åüß≠</b>\n\n'
    task_info = await db.open_task(int(tasks_msg_id))
    link_action = await db.get_link_action(tasks_msg_id)
    text += f"–ê –≤–æ—Ç –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µüßû\n\n<b>–ß—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?</b> ({len(task_info['type_task'])} –¥–µ–π—Å—Ç–≤–∏—è):\n\n"
    text += _get_sorted_list(task_info, link_action)

    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ 1 –∞–∫–∫–∞—É–Ω—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ, —Ç–æ –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ–±—ã –æ–Ω —Å–¥–µ–ª–∞–ª –∑–∞–¥–∞–Ω–∏–µ —Å –Ω–µ–≥–æ
    if account:
        text += f'\n<b>–ê–∫–∫–∞—É–Ω—Ç,</b> —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ: <a href="https://twitter.com/{account[1:]}">{account}</a>\n'
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ
    else:
        text += '\n<b>–í—ã–±–µ—Ä–∏ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏—èüëá</b>'
    return text


# –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–º–º–µ–Ω—Ç —Å–∞–º–æ–º—É
async def please_give_me_link(tasks_msg_id, account):
    text = await context_task_builder(tasks_msg_id, account, 'comment') + f"\n<b>{task_completion['not_check_comment']}</b>"
    text += f'<a href="https://twitter.com/{account[1:]}/with_replies"><b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</b></a>'
    return text


# –û–±—Ä–µ–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º (–∫–æ–≥–¥–∞ —É –Ω–µ–≥–æ –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∏–º)
async def content_comment_builder(tasks_msg_id):
    task_info = await db.open_task(tasks_msg_id)
    account = await db.get_task_account(tasks_msg_id)
    text = '\n\n–ï—Å–ª–∏ —Ç—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –æ—Å—Ç–∞–≤–∏–ª –µ–≥–æ –≤ –æ—Ç–≤–µ–¥–µ–Ω–Ω—ã–µ 10 –º–∏–Ω—É—Ç –∏ –≤—Å—ë –≤ –Ω–µ–º —É–∫–∞–∑–∞–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ - –Ω–∞–ø–∏—à–∏ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –æ–Ω –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏ –ø–æ–º–æ–∂–µ—Ç‚ù§Ô∏è\n\n'
    text += '<b>‚ú®–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ‚ú®</b>'
    text += f'\n<b>–ê–∫–∫–∞—É–Ω—Ç,</b> —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ: <a href="https://twitter.com/{account[1:]}">{account}</a>\n'
    text += _comment_note_text_builder(task_info['comment_parameter']) if 'comment_parameter' in task_info and task_info['comment_parameter'] else ''
    return text


# –¢–µ–∫—Å—Ç –ø–æ–¥ –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º —Ç–∞—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞—ë—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑ –∑–∞–¥–∞–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –Ω–µ–≥–æ –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å, —Å —á–µ–≥–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–≥–æ
async def control_statistic_builder(tg_id, tasks_msg_id):
    # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    if await db.get_tasks_user(tg_id):
        text = '–ö–∞–∫ —è –≤–∏–∂—É, —É —Ç–µ–±—è –µ—â–µ –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è - –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏—Ö –∏–ª–∏ –¥–æ–∂–¥–∞—Ç—å—Å—è –Ω–æ–≤—ã—Öüåö\n\n'
    else:
        text = '–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è - —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±–µ —Å–æ–æ–±—â—Éüåä\n\n'

    # –¢–µ–∫—Å—Ç —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    text += '<b>–ê –ø–æ–∫–∞ –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:</b>\n\n'
    info_dict = await db.get_info_to_user_and_tasks(tg_id)
    text += f"<b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {int(info_dict['balance']) if info_dict['balance'].is_integer() else round(info_dict['balance'], 2)} STB$</b>\n"
    text += f"<b>–ó–∞–¥–∞–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {info_dict['tasks_completed']}</b>\n"
    executions = await db.get_task_actual_limit(tasks_msg_id)
    # –ï—Å–ª–∏ –µ—â—ë –µ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
    if executions > 0 and await db.task_again(tg_id, tasks_msg_id):
        text += f"\n<b>–ó–∞–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Å –µ—â—ë <code>{executions}</code> {'–∞–∫–∫–∞—É–Ω—Ç–∞' if executions == 1 else '–∞–∫–∫–∞—É–Ω—Ç–æ–≤'}</b>\n"
        text += '\n–¢—ã –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—à–ª–æ–µ –∑–∞–¥–∞–Ω–∏–µ –µ—â–µ —Ä–∞–∑ —Å –¥—Ä—É–≥–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞üëá'
    else:
        text += f"<b>–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å: {info_dict['open_tasks']}</b>\n"

    return text


# –ë–∏–ª–¥–µ—Ä –ø–∏—Å—å–º–∞ —Å—á–∞—Å—Ç—å—è (–≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–∏—è) –æ —Ç–æ–º, —á—Ç–æ –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ —Ä–∞–Ω—å—à–µ, —á–µ–º —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
async def chain_letter_builder(tasks_msg_id):
    info_dict = await db.info_about_task(tasks_msg_id)
    text = task_completion['task_ended_during_check']
    if '/status/' not in info_dict['link'] and len(info_dict['types_actions']) == 1:
        text += f"<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å:</b> {info_dict['link']}\n\n"
        text += '–¢—ã –≤—ã–ø–æ–ª–Ω—è–ª —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª'
    else:
        text += f"<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç:</b> {info_dict['link']}\n\n"
        text += f"<b>–¢—ã –≤—ã–ø–æ–ª–Ω–∏–ª:</b>\n{await _task_list_builder(info_dict['types_actions'])}"
    return text
